
loadmodule "xhttp.so"
loadmodule "avpops.so"
loadmodule "jsonrpcs.so"

modparam("htable", "htable", "xhttpMap=>size=12;autoexpire=300")
modparam("jsonrpcs", "pretty_format", 1)

event_route[xhttp:request] {
	set_reply_close();
	set_reply_no_connect();
	xlog("L_WARN", "HTTP request received on $Rp, $hu\n");
	if ($hu =~ "/api/v1/stats/push") {
		#Json is our body
		$var(json) = $rb;
		jansson_get("type", $var(json), "$var(n)");
		xlog("L_WARN","Type is $var(n)");
		if ($var(n) == "rtp_stat") {
			$var(i) = 0;
			$(avp(x)[0]) = 'interval';
			$(avp(x)[1]) = 'streams';
			$(avp(x)[2]) = 'packets';
			$(avp(x)[3]) = 'lost';
			$(avp(x)[4]) = 'late';
			$(avp(x)[5]) = 'lost_perc';
			$(avp(x)[6]) = 'late_perc';
			$(avp(x)[7]) = 'out_of_seq';
			$(avp(x)[8]) = 'delay_min';
			$(avp(x)[9]) = 'delay_max';
			while (is_avp_set("$(avp(x)[$var(i)])")) {
				xlog("L_INFO", "Array value [$var(i)]: $(avp(x)[$var(i)])\n");
				jansson_get("$(avp(x)[$var(i)])", $var(json), "$var(d)");
				$var(n) = $(var(d){s.int});
				if ($sht(xhttpMap=>generic::$(avp(x)[$var(i)])) == $null) $sht(xhttpMap=>generic::$(avp(x)[$var(i)])) = $var(n);
				else $sht(xhttpMap=>generic::$(avp(x)[$var(i)])) = ($sht(xhttpMap=>generic::$(avp(x)[$var(i)])) + $var(n))/2;
				$var(i) = $var(i) + 1;
			}
		}
		xhttp_reply("200", "Ok", "done", "");
		exit;
	}
	xhttp_reply("403", "Forbidden", "", "");
	exit;
}