
modparam("htable", "htable", "xRtpMap=>size=12;autoexpire=HTABLE_AUTOEXPIRE")

route[XRTP] {
	if ((($rm == "BYE" && $rs == $null && $hdr(X-RTP-Stat) != $null) || ($rm == "BYE" && $rs == "200" && $hdr(X-RTP-Stat) != $null)) && $sht(xRtpMap=>$ci::$rs) == $null) {
		$sht(xRtpMap=>$ci::$rs) = 1;

		$var(host) = $HN(n);
		$var(influxdbHost) = "host=" + $var(host);

		$var(isoTime)      = $timef(%Y-%m-%dT%H:%M:%S);
		$var(unixTimeGen)  = $TS - 60;
		$var(unixTimeMic)  = $TV(u);
		$var(unixTimeMil)  = $var(unixTimeMic)/1000;
		$var(elasticTime)  = $_s($var(isoTime).$var(unixTimeMil)Z);
		$var(graylogTime)  = $_s($var(unixTimeGen).$var(unixTimeMil));
		$var(influxdbTime) = $_s($var(unixTimeGen)$var(unixTimeMic));

		$var(stats_elastic)  = "";
		$var(stats_influxdb) = "";
		$var(type)  = "stats_xrtp";
		$var(XHEAD) = $hdr(X-RTP-Stat);
		$var(CS) 	= 0;
		$var(PS) 	= 0;
		$var(ES) 	= 0;
		$var(OS) 	= 0;
		$var(NPS) 	= 0;
		$var(SPS) 	= 0;
		$var(SO) 	= 0;
		$var(QS) 	= 0;
		$var(PR) 	= 0;
		$var(ER) 	= 0;
		$var(OR) 	= 0;
		$var(NPR) 	= 0;
		$var(SR) 	= 0;
		$var(QR) 	= 0;
		$var(PLR) 	= 0;
		$var(PLS) 	= 0;
		$var(BL) 	= 0;
		$var(LS) 	= 0;
		$var(RBDU) 	= 0;
		$var(RBDE) 	= 0;
		$var(SBDU) 	= 0;
		$var(SBDE) 	= 0;
		$var(EN) 	= "";
		$var(DE) 	= "";
		$var(JIR) 	= 0;
		$var(JIS) 	= 0;
		$var(DLME) 	= 0;
		$var(DLMI) 	= 0;
		$var(DLMA) 	= 0;
		$var(LIP) 	= "";
		$var(RIP) 	= "";
		$var(DQ) 	= 0;
		$var(DSS) 	= 0;
		$var(DS) 	= 0;
		$var(PLCS) 	= 0;
		$var(JS) 	= 0;
		$var(RLoss) 	= 0;
		$var(ELACY) 	= 0;
		$var(RVal) 	= 0;
		$var(MOS) 	= 0;

		if ($var(XHEAD) =~ ".*CS=[0-9]") $var(CS)  = $(var(XHEAD){re.subst,/.*CS=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*PS=[0-9]") $var(PS)  = $(var(XHEAD){re.subst,/.*PS=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*ES=[0-9]") $var(ES)  = $(var(XHEAD){re.subst,/.*ES=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*OS=[0-9]") $var(OS)  = $(var(XHEAD){re.subst,/.*OS=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*SP=[0-9]") $var(NPS) = $(var(XHEAD){re.subst,/.*SP=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*SP=[0-9]") $var(SPS) = $(var(XHEAD){re.subst,/.*SP=([0-9]+)\/([0-9]+).*$/\2/s});
		if ($var(XHEAD) =~ ".*SO=[0-9]") $var(SO)  = $(var(XHEAD){re.subst,/.*SO=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*QS=[0-9]|[\-]") $var(QS) = $(var(XHEAD){re.subst,/.*QS=([0-9]|[\-]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*PR=[0-9]") $var(PR)  = $(var(XHEAD){re.subst,/.*PR=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*ER=[0-9]") $var(ER)  = $(var(XHEAD){re.subst,/.*ER=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*OR=[0-9]") $var(OR)  = $(var(XHEAD){re.subst,/.*OR=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*CR=[0-9]") $var(NPR) = $(var(XHEAD){re.subst,/.*CR=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*SR=[0-9]") $var(SR)  = $(var(XHEAD){re.subst,/.*SR=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*QR=[0-9]|[\-]") $var(QR) = $(var(XHEAD){re.subst,/.*QR=([0-9]|[\-]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*PL=[0-9]") $var(PLR) = $(var(XHEAD){re.subst,/.*PL=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*PL=[0-9]") $var(PLS) = $(var(XHEAD){re.subst,/.*PL=([0-9]+)\,([0-9]+).*$/\2/s});
		if ($var(XHEAD) =~ ".*BL=[0-9]") $var(BL)  = $(var(XHEAD){re.subst,/.*BL=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*LS=[0-9]") $var(LS)  = $(var(XHEAD){re.subst,/.*LS=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*RB=[0-9]|[\-]")  $var(RBDU) = $(var(XHEAD){re.subst,/.*RB=([0-9]+|[\-]).*$/\1/s});
		if ($var(XHEAD) =~ ".*RB=[0-9]|[\-]")  $var(RBDE) = $(var(XHEAD){re.subst,/.*RB=([0-9]+|[\-])\/([0-9]|[\-]+).*$/\2/s});
		if ($var(XHEAD) =~ ".*SB=[0-9]|[\-]")  $var(SBDU) = $(var(XHEAD){re.subst,/.*SB=([0-9]+|[\-]).*$/\1/s});
		if ($var(XHEAD) =~ ".*SB=[0-9]|[\-]")  $var(SBDE) = $(var(XHEAD){re.subst,/.*SB=([0-9]+|[\-])\/([0-9]|[\-]+).*$/\2/s});
		if ($var(XHEAD) =~ ".*EN=[A-Za-z0-9]") $var(EN)   = $(var(XHEAD){re.subst,/.*EN=([A-Za-z0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*DE=[A-Za-z0-9]") $var(DE)   = $(var(XHEAD){re.subst,/.*DE=([A-Za-z0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*JI=[0-9]") $var(JIR)  = $(var(XHEAD){re.subst,/.*JI=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*JI=[0-9]") $var(JIS)  = $(var(XHEAD){re.subst,/.*JI=([0-9]+)\,([0-9]+).*$/\2/s});
		if ($var(XHEAD) =~ ".*DL=[0-9]") $var(DLME) = $(var(XHEAD){re.subst,/.*DL=([0-9]+).*$/\1/s});
		if ($var(XHEAD) =~ ".*DL=[0-9]") $var(DLMI) = $(var(XHEAD){re.subst,/.*DL=([0-9]+)\,([0-9]+).*$/\2/s});
		if ($var(XHEAD) =~ ".*DL=[0-9]") $var(DLMA) = $(var(XHEAD){re.subst,/.*DL=([0-9]+)\,([0-9]+)\,([0-9]+).*$/\3/s});
		if ($var(XHEAD) =~ ".*IP=[0-9]") $var(LIP)  = $(var(XHEAD){re.subst,/.*IP=([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}).*$/\1/s});
		if ($var(XHEAD) =~ ".*IP=[0-9]") $var(RIP)  = $(var(XHEAD){re.subst,/.*IP=([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\:[0-9]+)\,([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}).*$/\2/s});
		if ($var(QS)   == "-") $var(QS)   = 0;
		if ($var(QR)   == "-") $var(QR)   = 0;
		if ($var(RBDU) == "-") $var(RBDU) = 0;
		if ($var(RBDE) == "-") $var(RBDE) = 0;
		if ($var(SBDU) == "-") $var(SBDU) = 0;
		if ($var(SBDE) == "-") $var(SBDE) = 0;

		# Since kamailio core cannot handle float values we shift them by 10^3
		$var(RLoss) = ((($var(PLR) + $var(PLS)) * 100) / ($var(PS) + $var(PR)));
		$var(ELACY) = ((($var(JIR) * 2) + $var(DLMI) + 20) * 1000);

		if ($var(ELACY) < 160000) {
			$var(RVal) = (93200 - ($var(ELACY) / 40));
		}
		else {
			$var(RVal) = (93200 - (($var(ELACY) - 120000) / 10));
		}

		$var(RVal) = $var(RVal) - ($var(RLoss) * 2500);
		$var(MOS1) = ((($var(RVal) / 1000) * 35) + 1000);
		$var(MOS2) = (100000 - $var(RVal)) * ($var(RVal) - 60000);
		$var(MOS3) = $var(MOS2) / 142857;
		$var(MOS4) = ($var(MOS3) * $var(RVal)) / 1000000;
		$var(MOS)  = $var(MOS1) + $var(MOS4);

		#xlog("R=$var(RVal) MOS1=$var(MOS1) MOS2=$var(MOS2) MOS3=$var(MOS3) MOS4=$var(MOS4) MOS=$var(MOS)");
		if ($var(MOS) < 1000 || $var(MOS) > 5000) $var(MOS) = 1000;

		jansson_set("string",  "host", "$var(host)", "$var(tmp_json)");
		jansson_set("string",  "id", "$ci", "$var(tmp_json)");
		jansson_set("string",  "from", "$fU", "$var(tmp_json)");
		jansson_set("string",  "to", "$tU", "$var(tmp_json)");
		jansson_set("integer", "callSetupTime", "$var(CS)", "$var(tmp_json)");
		jansson_set("integer", "audioPacketsSent", "$var(PS)", "$var(tmp_json)");
		jansson_set("integer", "expectedPacketsSent", "$var(ES)", "$var(tmp_json)");
		jansson_set("integer", "audioOctetsSent", "$var(OS)", "$var(tmp_json)");
		jansson_set("integer", "comfortNoisePacketsSent", "$var(NPS)", "$var(tmp_json)");
		jansson_set("integer", "silencePacketsSent", "$var(SPS)", "$var(tmp_json)");
		jansson_set("integer", "silenceOctetsSent", "$var(SO)", "$var(tmp_json)");
		jansson_set("integer", "quietPacketsSent", "$var(QS)", "$var(tmp_json)");
		jansson_set("integer", "audioPacketsReceived", "$var(PR)", "$var(tmp_json)");
		jansson_set("integer", "expectedPacketsReceived", "$var(ER)", "$var(tmp_json)");
		jansson_set("integer", "audioOctetsReceived", "$var(OR)", "$var(tmp_json)");
		jansson_set("integer", "comfortNoisePacketsReceived", "$var(NPR)", "$var(tmp_json)");
		jansson_set("integer", "comfortNoiseOctetsReceived", "$var(SR)", "$var(tmp_json)");
		jansson_set("integer", "quietPacketsReceived", "$var(QR)", "$var(tmp_json)");
		jansson_set("integer", "receivePacketsLost", "$var(PLR)", "$var(tmp_json)");
		jansson_set("integer", "sendPacketsLost", "$var(PLS)", "$var(tmp_json)");
		jansson_set("integer", "receiveMaxBurstLost", "$var(BL)", "$var(tmp_json)");
		jansson_set("integer", "numLostSequences", "$var(LS)", "$var(tmp_json)");
		jansson_set("integer", "receiveBurstDuration", "$var(RBDU)", "$var(tmp_json)");
		jansson_set("integer", "receiveBurstDensity", "$var(RBDE)", "$var(tmp_json)");
		jansson_set("integer", "sendBurstDuration", "$var(SBDU)", "$var(tmp_json)");
		jansson_set("integer", "sendBurstDensity", "$var(SBDE)", "$var(tmp_json)");
		jansson_set("string",  "usedEncoder", "$var(EN)", "$var(tmp_json)");
		jansson_set("string",  "usedDecoder", "$var(DE)", "$var(tmp_json)");
		jansson_set("integer", "receiveJitter", "$var(JIR)", "$var(tmp_json)");
		jansson_set("integer", "sendJitter", "$var(JIS)", "$var(tmp_json)");
		jansson_set("integer", "rttMean", "$var(DLME)", "$var(tmp_json)");
		jansson_set("integer", "rttMin", "$var(DLMI)", "$var(tmp_json)");
		jansson_set("integer", "rttMax", "$var(DLMA)", "$var(tmp_json)");
		jansson_set("string",  "localIP", "$var(LIP)", "$var(tmp_json)");
		jansson_set("string",  "remoteIP", "$var(RIP)", "$var(tmp_json)");
		jansson_set("integer", "mos", "$var(MOS)", "$var(tmp_json)");

		if ($hdr(X-RTP-Stat-Add) != $null){
			$var(XADD) = $hdr(X-RTP-Stat-Add);
			if ($var(XADD) =~ ".*DQ=[0-9]")   $var(DQ)   = $(var(XADD){re.subst,/.*DQ=([0-9]+).*$/\1/s});
			if ($var(XADD) =~ ".*DSS=[0-9]")  $var(DSS)  = $(var(XADD){re.subst,/.*DSS=([0-9]+).*$/\1/s});
			if ($var(XADD) =~ ".*DS=[0-9]")   $var(DS)   = $(var(XADD){re.subst,/.*DS=([0-9]+).*$/\1/s});
			if ($var(XADD) =~ ".*PLCS=[0-9]") $var(PLCS) = $(var(XADD){re.subst,/.*PLCS=([0-9]+).*$/\1/s});
			if ($var(XADD) =~ ".*JS=[0-9]")   $var(JS)   = $(var(XADD){re.subst,/.*JS=([0-9]+).*$/\1/s});

			jansson_set("integer", "decoderQueue", "$var(DQ)", "$var(tmp_json)");
			jansson_set("integer", "dropSilenceSample", "$var(DSS)", "$var(tmp_json)");
			jansson_set("integer", "dropSamples", "$var(DS)", "$var(tmp_json)");
			jansson_set("integer", "pLCSamples", "$var(PLCS)", "$var(tmp_json)");
			jansson_set("integer", "jitterSamples", "$var(JS)", "$var(tmp_json)");
		}

		#!ifdef DO_ELASTICSEARCH
		jansson_set("string", "timestamp", "$var(elasticTime)", "$var(tmp_json)");
		$var(stats_elastic) = $var(stats_elastic) + " {\"index\": {\"_index\":\"homer-"+ $timef(%d.%m.%Y) +"\",\"_type\":\""+$var(type)+"\" }}\n";
		$var(stats_elastic) = $var(stats_elastic) + $var(tmp_json) + "\n";
		#!endif

		#!ifdef DO_GRAYLOG
		jansson_set("real", "timestamp", "$var(graylogTime)", "$var(tmp_json)");
		jansson_set("string", "short_message", "$var(type)", "$var(tmp_json)");
		$var(graylog_body) = $var(tmp_json);
		route(HTTP_POST);
		#!endif

		#!ifdef DO_INFLUXDB
		$var(stats_influxdb) = $_s($var(stats_influxdb)$var(type),$var(influxdbHost) );
		$var(stats_influxdb) = $_s($var(stats_influxdb)from="$fU",to="$tU",callSetupTime=$var(CS),audioPacketsSent=$var(PS),expectedPacketsSent=$var(ES),audioOctetsSent=$var(OS),comfortNoisePacketsSent=$var(NPS),silencePacketsSent=$var(SPS),silenceOctetsSent=$var(SO),quietPacketsSent=$var(QS),audioPacketsReceived=$var(PR),expectedPacketsReceived=$var(ER),audioOctetsReceived=$var(OR),comfortNoisePacketsReceived=$var(NPR),comfortNoiseOctetsReceived=$var(SR),quietPacketsReceived=$var(QR),receivePacketsLost=$var(PLR),sendPacketsLost=$var(PLS),receiveMaxBurstLost=$var(BL),numLostSequences=$var(LS),receiveBurstDuration=$var(RBDU),receiveBurstDensity=$var(RBDE),sendBurstDuration=$var(SBDU),sendBurstDensity=$var(SBDE),usedEncoder="$var(EN)",usedDecoder="$var(DE)",receiveJitter=$var(JIR),sendJitter=$var(JIS),rttMean=$var(DLME),rttMin=$var(DLMI),rttMax=$var(DLMA),localIP="$var(LIP)",remoteIP="$var(RIP)",mos=$var(MOS) $var(influxdbTime)) + "\n";
		#!endif

		$var(tmp_json) = 0;
		$var(graylog_body) = "";

		$var(elasticsearch_body) = $var(stats_elastic);
		$var(influxdb_body) = $var(stats_influxdb);

		$var(bulk) = 1;
		route(HTTP_POST);
		$var(bulk) = 0;
	}
}