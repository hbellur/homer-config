
loadmodule "geoip.so"

modparam("geoip", "path", "/usr/share/GeoIP/GeoIPCity.dat")
modparam("htable", "htable", "geoMap=>size=14;autoexpire=HTABLE_AUTOEXPIRE")

##!define DO_GEOHASH

#!ifdef DO_GEOHASH
loadmodule "app_lua.so"
modparam("app_lua", "load", "/etc/kamailio/lua/geohash.lua")
#!endif

route[GEO] {
	if (is_method("INVITE|REGISTER") && geoip_match("$si", "src")) {
		xlog("L_INFO", "GEO IP [$si] from: $rm::$gip(src=>cc)::$gip(src=>city)::$gip(src=>zip)::$gip(src=>lat)::$gip(src=>lon)\n");
		if ($gip(src=>city) != $null || $gip(src=>zip) != $null){
			$var(geoKey) = $_s($rm::$gip(src=>cc)::$gip(src=>city)::$gip(src=>zip)::$gip(src=>lat)::$gip(src=>lon));
			#!ifdef DO_GEOHASH
			lua_run("GeoHash", "$gip(src=>lat)", "$gip(src=>lon)");
			xlog("L_INFO", "GEO IP [$si] from: $rm::$gip(src=>cc)::$gip(src=>city)::$gip(src=>zip)::$gip(src=>lat)::$gip(src=>lon)::$var(ghash)\n");
			$var(geoKey) = $_s($rm::$gip(src=>cc)::$gip(src=>city)::$gip(src=>zip)::$gip(src=>lat)::$gip(src=>lon)::$var(ghash));
			#!endif
			if ($sht(geoMap=>$var(geoKey)) == $null) $sht(geoMap=>$var(geoKey)) = 0;
			$sht(geoMap=>$var(geoKey)) = $sht(geoMap=>$var(geoKey)) + 1;
		}
	}
}

route[STATS_GEO] {
	$var(stats_elastic)  = "";
	$var(stats_influxdb) = "";
	$var(type) = "stats_geo";

	sht_iterator_start("i1", "geoMap");
	while (sht_iterator_next("i1")) {
		$var(method)   = $(shtitkey(i1){s.select,0,:});
		$var(country)  = $(shtitkey(i1){s.select,2,:});
		$var(city)     = $(shtitkey(i1){s.select,4,:});
		$var(zip)      = $(shtitkey(i1){s.select,6,:});
		if ($var(zip) == "<null>") $var(zip) = "";
		$var(lat)      = $(shtitkey(i1){s.select,8,:});
		$var(lon)      = $(shtitkey(i1){s.select,10,:});
		$var(location) = $var(lat) + "," + $var(lon);
		#!ifdef DO_GEOHASH
		$var(geohash)  = $(shtitkey(i1){s.select,12,:});
		#!endif
		$var(value)    = $shtitval(i1);
		
		jansson_set("string", "host", "$var(host)", "$var(tmp_json)");
		jansson_set("string", "method", "$var(method)", "$var(tmp_json)");
		jansson_set("string", "country", "$var(country)", "$var(tmp_json)");
		jansson_set("string", "city", "$var(city)", "$var(tmp_json)");
		jansson_set("string", "zip", "$var(zip)", "$var(tmp_json)");
		jansson_set("string", "location", "$var(location)", "$var(tmp_json)");
		#!ifdef DO_GEOHASH
		jansson_set("string", "geohash", "$var(geohash)", "$var(tmp_json)");
		#!endif
		jansson_set("integer", "value", "$var(value)", "$var(tmp_json)");

		#!ifdef DO_ELASTICSEARCH
		jansson_set("string", "timestamp", "$var(elasticTime)", "$var(tmp_json)");
		$var(stats_elastic) = $var(stats_elastic) + " {\"index\": {\"_index\":\"homer-"+ $timef(%d.%m.%Y) +"\",\"_type\":\""+$var(type)+"\" }}\n";
		$var(stats_elastic) = $var(stats_elastic) + $var(tmp_json) + "\n";
		#!endif

		#!ifdef DO_GRAYLOG
		jansson_set("real", "timestamp", "$var(graylogTime)", "$var(tmp_json)");
		jansson_set("string", "short_message", "$var(type)", "$var(tmp_json)");
		$var(graylog_body) = $var(tmp_json);
		route(HTTP_POST);
		#!endif

		#!ifdef DO_INFLUXDB
			#!ifdef DO_GEOHASH
			$var(stats_influxdb) = $_s($var(stats_influxdb)$var(type),$var(influxdbHost),country=$var(country),geohash=$var(geohash) );
			#!else
			$var(stats_influxdb) = $_s($var(stats_influxdb)$var(type),$var(influxdbHost),country=$var(country),zip=$var(zip) );
			#!endif
		$var(stats_influxdb) = $_s($var(stats_influxdb)location="$var(location)",value=$var(value) $var(influxdbTime)) + "\n";
		#!endif

		#!ifdef DO_MYSQL_STATS
			$var(t1) = $TS;
			$var(t2) = $var(t1) - (CHECK_STATS_INTERVAL);
			$var(t_date) = "FROM_UNIXTIME(" + $var(t1) + ", '%Y-%m-%d %H:%i:00')";
			$var(f_date) = "FROM_UNIXTIME(" + $var(t2) + ", '%Y-%m-%d %H:%i:00')";
			sql_query("sqlstats", "INSERT INTO stats_geo (from_date, to_date, method, country, lat, lon, total) VALUES($var(t_date),$var(t_date), '$var(method)', '$var(country)', '$var(lat)', '$var(lon)', $var(value));");
		#!endif

		$var(tmp_json) = 0;
		$var(graylog_body) = "";
	}
	sht_iterator_end("i1");
	sht_rm_name_re("geoMap=>.*");

	$var(elasticsearch_body) = $var(stats_elastic);
	$var(influxdb_body) = $var(stats_influxdb);

	$var(bulk) = 1;
	route(HTTP_POST);
	$var(bulk) = 0;
}
