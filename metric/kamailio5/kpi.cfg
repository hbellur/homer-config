
modparam("htable", "htable", "kpiMap=>size=12;autoexpire=HTABLE_AUTOEXPIRE")

route[KPI] {
	if ($rm == "INVITE" && $rs == $null) {
		if ($sht(kpiMap=>kpi::INVITE) == $null) $sht(kpiMap=>kpi::INVITE) = 0;
		$sht(kpiMap=>kpi::INVITE) = $sht(kpiMap=>kpi::INVITE) + 1;
	}

	if ($rs =~ "^([1-6][0-9][0-9])$") {
		if ($sht(kpiMap=>$rs::$rm) == $null) $sht(kpiMap=>$rs::$rm) = 0;
		$sht(kpiMap=>$rs::$rm) = $sht(kpiMap=>$rs::$rm) + 1;
	}
	
	if ($rm == "INVITE") {
		if ($rs =~ "^(408|50[034])$") {
			if ($sht(kpiMap=>kpi::isa) == $null) $sht(kpiMap=>kpi::isa) = 0;
			$sht(kpiMap=>kpi::isa) = $sht(kpiMap=>kpi::isa) + 1;
		}
		if ($rs =~ "^(486|487|603)$") {
			if ($sht(kpiMap=>kpi::bad) == $null) $sht(kpiMap=>kpi::bad) = 0;
			$sht(kpiMap=>kpi::bad) = $sht(kpiMap=>kpi::bad) + 1;
		}
		if ($rs =~ "^(50[034])$") {
			if ($sht(kpiMap=>kpi::sd) == $null) $sht(kpiMap=>kpi::sd) = 0;
			$sht(kpiMap=>kpi::sd) = $sht(kpiMap=>kpi::sd) + 1;
		}
	}

	if ($rm == "BYE" && $rs == $null) {
		if (is_present_hf("Reason")) {
			$var(cause) = $(hdr(Reason){param.value,cause}{s.int});
			if ($var(cause) != 16 && $var(cause) !=17) {
				if ($sht(kpiMap=>kpi::sdf) == $null) $sht(kpiMap=>kpi::sdf) = 0;
				$sht(kpiMap=>kpi::sdf) = $sht(kpiMap=>kpi::sdf) + 1;
			}
		}
	}
}

route[STATS_KPI] {
	$var(stats_elastic)  = "";
	$var(stats_influxdb) = "";
	$var(type) = "stats_kpi";
	$var(asr) = 0;
	$var(ner) = 0;
	$var(sdr) = 0;

	if ($sht(kpiMap=>kpi::INVITE) > 0) {
		if ($sht(kpiMap=>407::INVITE) == $null) $sht(kpiMap=>407::INVITE) = 0;
		if ($sht(kpiMap=>200::INVITE) == $null) $sht(kpiMap=>200::INVITE) = 0;
		if ($sht(kpiMap=>kpi::bad) == $null) $sht(kpiMap=>kpi::bad) = 0;
		if ($sht(kpiMap=>kpi::isa) == $null) $sht(kpiMap=>kpi::isa) = 0;
		if ($sht(kpiMap=>kpi::sd) == $null) $sht(kpiMap=>kpi::sd) = 0;
		$var(inviteDelta) = $sht(kpiMap=>kpi::INVITE) - $sht(kpiMap=>407::INVITE);
		if ($var(inviteDelta) > 0) {
			$var(asr) = $sht(kpiMap=>200::INVITE) * 100 / $var(inviteDelta);
			$var(ner) = ($sht(kpiMap=>200::INVITE) + $sht(kpiMap=>kpi::bad)) * 100 / $var(inviteDelta);
			$var(sdr) = $sht(kpiMap=>kpi::sd) * 100 / $var(inviteDelta);
			if ($var(asr) > 100) $var(asr) = 100;
			if ($var(asr) < 0) $var(asr) = 1;
			if ($var(ner) > 100) $var(ner) = 100;
			if ($var(ner) < 0) $var(ner) = 1;
			if ($var(sdr) > 100) $var(sdr) = 100;
			if ($var(sdr) < 0) $var(sdr) = 1;
		}
	}

	jansson_set("string", "host", "$var(host)", "$var(tmp_json)");
	jansson_set("integer", "asr", "$var(asr)", "$var(tmp_json)");
	jansson_set("integer", "ner", "$var(ner)", "$var(tmp_json)");
	jansson_set("integer", "sdr", "$var(sdr)", "$var(tmp_json)");

	#!ifdef DO_ELASTICSEARCH
	jansson_set("string", "timestamp", "$var(elasticTime)", "$var(tmp_json)");
	$var(stats_elastic) = $var(stats_elastic) + " {\"index\": {\"_index\":\"homer-"+ $timef(%d.%m.%Y) +"\",\"_type\":\""+$var(type)+"\" }}\n";
	$var(stats_elastic) = $var(stats_elastic) + $var(tmp_json) + "\n";
	#!endif

	#!ifdef DO_GRAYLOG
	jansson_set("real", "timestamp", "$var(graylogTime)", "$var(tmp_json)");
	jansson_set("string", "short_message", "$var(type)", "$var(tmp_json)");
	$var(graylog_body) = $var(tmp_json);
	route(HTTP_POST);
	#!endif

	#!ifdef DO_INFLUXDB
	$var(stats_influxdb) = $_s($var(stats_influxdb)$var(type),$var(influxdbHost) );
	$var(stats_influxdb) = $_s($var(stats_influxdb)asr=$var(asr),ner=$var(ner),sdr=$var(sdr) $var(influxdbTime)) + "\n";
	#!endif

        #!ifdef DO_MYSQL_STATS

                $var(t1) = $TS;
                $var(t2) = $var(t1) - (CHECK_STATS_INTERVAL);
                $var(t_date) = "FROM_UNIXTIME(" + $var(t1) + ", '%Y-%m-%d %H:%i:00')";
                $var(f_date) = "FROM_UNIXTIME(" + $var(t2) + ", '%Y-%m-%d %H:%i:00')";

                sql_query("sqlstats", "INSERT INTO stats_data (from_date, to_date, type, total) VALUES($var(f_date), $var(t_date), 'asr', $var(asr)) ON DUPLICATE KEY UPDATE total=(total+$var(asr))/2");
                sql_query("sqlstats", "INSERT INTO stats_data (from_date, to_date, type, total) VALUES($var(f_date), $var(t_date), 'ner', $var(ner)) ON DUPLICATE KEY UPDATE total=(total+$var(ner))/2");
                sql_query("sqlstats", "INSERT INTO stats_data (from_date, to_date, type, total) VALUES($var(f_date), $var(t_date), 'sdr', $var(sdr)) ON DUPLICATE KEY UPDATE total=(total+$var(sdr))/2");

        #!endif

	$var(tmp_json) = 0;
	$var(graylog_body) = "";
	sht_rm_name_re("kpiMap=>.*");

	$var(elasticsearch_body) = $var(stats_elastic);
	$var(influxdb_body) = $var(stats_influxdb);

	$var(bulk) = 1;
	route(HTTP_POST);
	$var(bulk) = 0;
}